# Copyright (c) 2009-2011, Code Aurora Forum. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of Code Aurora nor
#       the names of its contributors may be used to endorse or promote
#       products derived from this software without specific prior written
#       permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

on emmc-fs-s1
    class_start trimarea
    exec /sbin/wait4tad
    # modem remote fs
    start rmt_storage
    # modem also wants to communicate with miscta...
    start ta_rmt_service
    # start fota
    exec /sbin/fotainit
    # mount mmc partitions
    wait /dev/block/mmcblk0p11
    mount ext4 /dev/block/mmcblk0p11 /system ro barrier=1
    # set the startup flag to AMSS start-up
    #start setssflagbs

on emmc-fs2-s1
    wait /dev/block/mmcblk0p16
    exec /system/bin/e2fsck -y -f /dev/block/mmcblk0p12
    exec /system/bin/resize2fs /dev/block/mmcblk0p12
    exec /system/bin/tune2fs -e panic /dev/block/mmcblk0p12
    mount ext4 /dev/block/mmcblk0p12 /cache nosuid nodev barrier=1	
    exec /system/bin/e2fsck -y -f /dev/block/mmcblk0p16
    exec /system/bin/resize2fs /dev/block/mmcblk0p16
    exec /system/bin/tune2fs -e panic /dev/block/mmcblk0p16
    mount ext4 /dev/block/mmcblk0p16 /data nosuid nodev barrier=1 noauto_da_alloc
    mount ext4 /dev/block/mmcblk0p6 /persist nosuid nodev barrier=1
    # SoMC LTALabel
    wait /dev/block/mmcblk0p10
    mount ext4 /dev/block/mmcblk0p10 /lta-label nosuid nodev noatime noexec ro barrier=0

    write /sys/devices/virtual/bdi/179:32/read_ahead_kb 512

service updatemiscta /system/bin/updatemiscta
    class late_start
    user root
    disabled
    oneshot

service getrootingstatus /system/bin/getrootingstatus
    class late_start
    user root
    disabled
    oneshot
	
# SEMC, TA rmt service
service ta_rmt_service /sbin/ta_rmt_service
    class late_start
    user root
    disabled

on property:ro.emmc=1
    start updatemiscta
    start getrootingstatus

# SEMC, TA Daemon
service tad /sbin/tad /dev/block/mmcblk0p2 0,16,256
    class trimarea
    user root
    group root
    socket tad stream 0660 system system

service nvcustomizer /system/bin/nvcustomizer
    class late_start
    user root
    disabled
    oneshot

on property:ro.s1.nvcustomizer=1
    start nvcustomizer

# Set the startup flag to boot start, run after mount system
#service setssflagbs /system/bin/startupflag bootstarted
#    user root
#    oneshot
#    disabled

# Set the startup flag to boot complete, run on property change
service setssflagbc /system/bin/startupflag bootcomplete
    user root
    oneshot
    disabled

on property:dev.bootcomplete=1
    start setssflagbc

